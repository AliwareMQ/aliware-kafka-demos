
spring:
  application:
    name: springboot-kafka-demo-vpc-ssl
  # Spring kafka 配置
  kafka:
    # 设置接入点，请通过控制台获取对应Topic的接入点
    bootstrap-servers: xxx
    config:
      # hostname校验改成空
      ssl:
        endpoint:
          identification:
            algorithm: ""
        # 建议设置为绝对路径
        truststore-location: /xxx/mix.4096.client.truststore.jks
      # 接入协议，目前支持使用SASL_SSL协议接入
      security:
        protocol: SASL_SSL
      sasl:
        #PLAIN, SCRAM-SHA-256
        mechanism: PLAIN
        # 设置SASL账号密码，从控制台获取
        username: xxx
        password: xxx
        # 根证书store的密码，保持不变
        truststore_password: KafkaOnsClient
    producer:
      topic: topic-test
      # 请求的最长等待时间
      max-block-ms: 30000
      # 设置客户端内部重试次数
      retries: 5
      # 设置客户端内部重试间隔
      reconnect-backoff-ms: 3000
      enable-idempotence: false
    consumer:
      # 当前消费实例所属的消费组，请在控制台申请之后填写, 属于同一个组的消费实例，会负载消费消息
      group-id: test1
      # 如果为true，则为自动提交，消费者的偏移量将在后台定期提交(Kafka策略提交)，若为false，则为手动提交（spring策略提交）。
      enable-auto-commit: true
      # 消费者偏移自动提交给Kafka的频率 （以毫秒为单位），默认值为5000
      auto-commit-interval: 5000
      # 每次poll的最大数量, 注意该值不要改得太大，如果poll太多数据，而不能在下次poll之前消费完，则会触发一次负载均衡，产生卡顿
      max-poll-records: 30
      # 设置单次拉取的量，走公网访问时，该参数会有较大影响
      max-partition-fetch-bytes: 32000
      fetch-max-bytes: 32000
      # 两次poll之间的最大允许间隔, 可更加实际拉去数据和客户的版本等设置此值，默认30s
      session-timeout: 30000
    listener:
      # 指定listener 容器中的线程数，用于提高并发量
      concurrency: 2
      #     poll-timeout: 1500 #只限自动提交，如果队列中有消息，立即消费消息，每次消费的消息的多少可以通过max.poll.records配置。
      # 是否开启批量消费，true表示批量消费
      batch-listener: false




